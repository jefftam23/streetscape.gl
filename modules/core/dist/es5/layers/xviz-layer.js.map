{"version":3,"sources":["../../../src/layers/xviz-layer.js"],"names":["XVIZ_TO_LAYER_TYPE","points2d","points3d","point2d","circle2d","line2d","path2d","polygon2d","point","circle","polyline","polygon","text","stadium","STYLE_TO_LAYER_PROP","scatterplot","opacity","radius_min_pixels","radius_max_pixels","radius","stroked","filled","stroke_width_min_pixels","stroke_width_max_pixels","stroke_width","stroke_color","fill_color","pointcloud","radius_pixels","point_color_mode","point_color_domain","path","extruded","height","font_family","font_weight","text_size","text_rotation","text_anchor","text_baseline","EMPTY_OBJECT","getInlineProperty","context","propertyName","objectState","inlineProp","undefined","getStylesheetProperty","style","getProperty","f","useSemanticColor","XVIZObject","get","id","altPropertyName","property","disableInlineStyling","getPropertyDefault","XVIZLayer","props","styleToLayerProp","layerProps","updateTriggers","stylePropName","layerPropName","isAccessor","startsWith","dependencies","getPropertyDependencies","_getProperty","objectStates","state","key","trigger","_getPropertyAccessor","forEach","stateName","data","length","type","oldProps","changeFlags","dataChanged","dataType","_getLayerType","vertices","Array","isArray","reduce","arr","multiPoints","pt","push","setState","_getDefaultLayerProps","lightSettings","linkTitle","streamName","objectType","_getLayerProps","forwardProps","ScatterplotLayer","getSubLayerProps","getPosition","center","getFillColor","PointCloudLayer","ids","numInstances","instancePositions","positions","instanceColors","colors","vehicleRelativeTransform","p","PathLayer","getPath","getColor","start","end","rounded","PolygonLayer","wireframe","getPolygon","getLineColor","TextLayer","getText","CompositeLayer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable camelcase */\nimport {CompositeLayer} from '@deck.gl/core';\nimport {ScatterplotLayer, PathLayer, PolygonLayer, TextLayer} from '@deck.gl/layers';\nimport PointCloudLayer from './point-cloud-layer/point-cloud-layer';\n// TODO/ib - Uncomment to enable binary/flat polygon arrays\n// import PathLayer from './binary-path-layer/binary-path-layer';\n// import PolygonLayer from './binary-polygon-layer/binary-polygon-layer';\n\nimport {XVIZObject} from '@xviz/parser';\n\nimport deepExtend from 'lodash.merge';\n\nconst XVIZ_TO_LAYER_TYPE = {\n  // V1\n  points2d: 'scatterplot',\n  points3d: 'pointcloud',\n  point2d: 'scatterplot',\n  circle2d: 'scatterplot',\n  line2d: 'path',\n  path2d: 'path',\n  polygon2d: 'polygon',\n\n  // V2\n  point: 'pointcloud',\n  circle: 'scatterplot',\n  polyline: 'path',\n  polygon: 'polygon',\n  text: 'text',\n  stadium: 'stadium'\n};\n\nconst STYLE_TO_LAYER_PROP = {\n  scatterplot: {\n    opacity: 'opacity',\n    radius_min_pixels: 'radiusMinPixels',\n    radius_max_pixels: 'radiusMaxPixels',\n    radius: 'getRadius',\n    stroked: 'stroked',\n    filled: 'filled',\n    stroke_width_min_pixels: 'widthMinPixels',\n    stroke_width_max_pixels: 'widthMaxPixels',\n    stroke_width: 'getLineWidth',\n    stroke_color: 'getLineColor',\n    fill_color: 'getFillColor'\n  },\n  pointcloud: {\n    opacity: 'opacity',\n    radius_pixels: 'pointSize',\n    fill_color: 'getColor',\n    point_color_mode: 'colorMode',\n    point_color_domain: 'colorDomain'\n  },\n  path: {\n    opacity: 'opacity',\n    stroke_width_min_pixels: 'widthMinPixels',\n    stroke_width_max_pixels: 'widthMaxPixels',\n    stroke_color: 'getColor',\n    stroke_width: 'getWidth'\n  },\n  stadium: {\n    opacity: 'opacity',\n    radius_min_pixels: 'widthMinPixels',\n    radius_max_pixels: 'widthMaxPixels',\n    fill_color: 'getColor',\n    radius: 'getWidth'\n  },\n  polygon: {\n    opacity: 'opacity',\n    stroked: 'stroked',\n    filled: 'filled',\n    extruded: 'extruded',\n    stroke_color: 'getLineColor',\n    stroke_width: 'getLineWidth',\n    stroke_width_min_pixels: 'lineWidthMinPixels',\n    stroke_width_max_pixels: 'lineWidthMaxPixels',\n    fill_color: 'getFillColor',\n    height: 'getElevation'\n  },\n  text: {\n    opacity: 'opacity',\n    fill_color: 'getColor',\n    font_family: 'fontFamily',\n    font_weight: 'fontWeight',\n    text_size: 'getSize',\n    text_rotation: 'getAngle',\n    text_anchor: 'getTextAnchor',\n    text_baseline: 'getAlignmentBaseline'\n  }\n};\n\nconst EMPTY_OBJECT = {};\n\n// Access V1 style properties\nconst getInlineProperty = (context, propertyName, objectState) => {\n  const inlineProp = objectState[propertyName];\n  return inlineProp === undefined ? null : inlineProp;\n};\nconst getStylesheetProperty = (context, propertyName, objectState) =>\n  context.style.getProperty(propertyName, objectState);\n\n// Fetch layer property from XVIZ Stylesheet or object\n//\n// Current resolution of property to style attribute has to deal with\n//  - stylesheets taking precedence over inline style attributes\n//  - style attribute names used in the application do not match those of\n//    XVIZ v1\n//\n// TODO(twojtasz): Once XVIZ v1 is removed this logic can be simplified\n// by removing the `altPropertyName` and changing the order of resolution\n// to be inline, stylesheet, then default.\n//\n/* eslint-disable complexity */\nfunction getProperty(context, propertyName, f = EMPTY_OBJECT) {\n  let objectState = f;\n\n  // Handle XVIZ v1 color override where our semantic color mapping\n  // differs from current OCS colors.  In XVIZ v2 we should be aligned.\n  if (context.useSemanticColor) {\n    switch (propertyName) {\n      case 'stroke_color':\n      case 'fill_color':\n        objectState = XVIZObject.get(f.id) || f;\n        break;\n\n      default:\n      // ignore\n    }\n  }\n\n  // Handle XVIZ v1 style property name mismatches and\n  // setup validation function based on property name.\n  let altPropertyName = null;\n\n  switch (propertyName) {\n    case 'stroke_color':\n    case 'fill_color':\n      altPropertyName = 'color';\n      break;\n    case 'stroke_width':\n      altPropertyName = 'thickness';\n      break;\n    case 'radius':\n      // v2 circle inline style\n      if (f.radius) {\n        return f.radius;\n      }\n      break;\n    default:\n      break;\n  }\n\n  // 1a. Property from inline style (v2) or stylesheet\n  let property = getStylesheetProperty(context, propertyName, objectState);\n\n  // 1b. Alt property from inline style (v2) or stylesheet\n  if (property === null && altPropertyName) {\n    property = getStylesheetProperty(context, altPropertyName, objectState);\n  }\n\n  // Backward compatibility\n  if (property === null && !context.disableInlineStyling) {\n    // 2a. Property from inline style (v1)\n    property = getInlineProperty(context, propertyName, objectState);\n\n    // 2b. Alt property from inline style (v1)\n    if (property === null && altPropertyName) {\n      property = getInlineProperty(context, altPropertyName, objectState);\n    }\n  }\n\n  // 3. Property from default style\n  if (property === null) {\n    property = context.style.getPropertyDefault(propertyName);\n  }\n\n  return property;\n}\n/* eslint-enable complexity */\n\nexport default class XVIZLayer extends CompositeLayer {\n  _getProperty(propertyName) {\n    return getProperty(this.props, propertyName);\n  }\n\n  _getPropertyAccessor(propertyName) {\n    return f => getProperty(this.props, propertyName, f);\n  }\n\n  // These props are persistent unless data type and stylesheet change\n  _getDefaultLayerProps(style, styleToLayerProp) {\n    const layerProps = {\n      updateTriggers: {}\n    };\n\n    for (const stylePropName in styleToLayerProp) {\n      const layerPropName = styleToLayerProp[stylePropName];\n      const isAccessor = layerPropName.startsWith('get');\n      if (isAccessor) {\n        layerProps.updateTriggers[layerPropName] = {\n          style: stylePropName,\n          dependencies: style.getPropertyDependencies(stylePropName)\n        };\n      } else {\n        layerProps[layerPropName] = this._getProperty(stylePropName);\n      }\n    }\n\n    return layerProps;\n  }\n\n  _getLayerProps() {\n    const {objectStates} = this.props;\n    const {layerProps} = this.state;\n    const {updateTriggers} = layerProps;\n\n    for (const key in updateTriggers) {\n      const trigger = updateTriggers[key];\n\n      layerProps[key] = this._getPropertyAccessor(trigger.style);\n\n      updateTriggers[key] = {...trigger};\n      trigger.dependencies.forEach(stateName => {\n        updateTriggers[key][stateName] = objectStates[stateName];\n      });\n    }\n\n    return layerProps;\n  }\n\n  _getLayerType(data) {\n    if (data.length > 0) {\n      return data[0].type;\n    }\n    return data.type;\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    let {type} = this.state;\n\n    if (changeFlags.dataChanged) {\n      // Pre-process data\n      let data = props.data;\n      const dataType = this._getLayerType(data);\n      type = XVIZ_TO_LAYER_TYPE[dataType];\n\n      if (type === 'scatterplot' && data[0].vertices && Array.isArray(data[0].vertices[0])) {\n        // is multi point\n        data = data.reduce((arr, multiPoints) => {\n          multiPoints.vertices.forEach(pt => {\n            arr.push({...multiPoints, vertices: pt});\n          });\n          return arr;\n        }, []);\n      }\n\n      this.setState({data});\n    }\n\n    if (type !== this.state.type || props.style !== oldProps.style) {\n      const styleToLayerProp = STYLE_TO_LAYER_PROP[type];\n      const layerProps = this._getDefaultLayerProps(props.style, styleToLayerProp);\n      this.setState({type, layerProps});\n    }\n  }\n\n  renderLayers() {\n    const {lightSettings} = this.props;\n    const {type, data} = this.state;\n\n    if (!type) {\n      return null;\n    }\n\n    const {linkTitle, streamName, objectType} = this.props;\n    const layerProps = this._getLayerProps();\n    const updateTriggers = layerProps.updateTriggers;\n    const forwardProps = {\n      linkTitle,\n      streamName,\n      objectType\n    };\n\n    switch (type) {\n      case 'scatterplot':\n        return new ScatterplotLayer(\n          forwardProps,\n          layerProps,\n          this.getSubLayerProps({\n            id: 'scatterplot',\n            data,\n            // `vertices` is used xviz V1 and `center` is used by xviz V2\n            getPosition: f => f.vertices || f.center,\n            updateTriggers: deepExtend(updateTriggers, {\n              getFillColor: {useSemanticColor: this.props.useSemanticColor}\n            })\n          })\n        );\n\n      case 'pointcloud':\n        return new PointCloudLayer(\n          forwardProps,\n          layerProps,\n          Array.isArray(data)\n            ? {\n                data: data[0].vertices\n              }\n            : {\n                data: data.ids,\n                numInstances: data.numInstances,\n                instancePositions: data.positions,\n                instanceColors: data.colors\n              },\n          this.getSubLayerProps({\n            id: 'pointcloud',\n            vehicleRelativeTransform: this.props.vehicleRelativeTransform,\n            getPosition: p => p\n          })\n        );\n\n      case 'path':\n        return new PathLayer(\n          forwardProps,\n          layerProps,\n          this.getSubLayerProps({\n            id: 'path',\n            data,\n            getPath: f => f.vertices,\n            updateTriggers: deepExtend(updateTriggers, {\n              getColor: {useSemanticColor: this.props.useSemanticColor}\n            })\n          })\n        );\n\n      case 'stadium':\n        return new PathLayer(\n          forwardProps,\n          layerProps,\n          this.getSubLayerProps({\n            id: 'stadium',\n            data,\n            getPath: f => [f.start, f.end],\n            rounded: true,\n            updateTriggers: deepExtend(updateTriggers, {\n              getColor: {useSemanticColor: this.props.useSemanticColor}\n            })\n          })\n        );\n\n      case 'polygon':\n        return new PolygonLayer(\n          forwardProps,\n          layerProps,\n          this.getSubLayerProps({\n            id: 'polygon',\n            opacity: this.props.opacity || 1,\n            data,\n            lightSettings,\n            wireframe: layerProps.stroked,\n            getPolygon: f => f.vertices,\n            updateTriggers: deepExtend(updateTriggers, {\n              getLineColor: {useSemanticColor: this.props.useSemanticColor},\n              getFillColor: {useSemanticColor: this.props.useSemanticColor}\n            })\n          })\n        );\n\n      case 'text':\n        return new TextLayer(\n          forwardProps,\n          layerProps,\n          this.getSubLayerProps({\n            id: 'text',\n            data,\n            getText: f => f.text,\n            updateTriggers: deepExtend(updateTriggers, {\n              getColor: {useSemanticColor: this.props.useSemanticColor}\n            })\n          })\n        );\n\n      default:\n        return null;\n    }\n  }\n}\n\nXVIZLayer.layerName = 'XVIZLayer';\n"],"file":"xviz-layer.js"}