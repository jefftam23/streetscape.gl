{"version":3,"sources":["../../../src/loaders/xviz-loader-interface.js"],"names":["XVIZLoaderInterface","options","message","type","LOG_STREAM_MESSAGE","METADATA","_onXVIZMetadata","emit","TIMESLICE","_onXVIZTimeslice","DONE","error","get","_getDataVersion","_getDataByStream","_getBufferedTimeRanges","getStreamSettings","_getStreams","streamSettings","streams","result","streamName","getCurrentTime","_getBufferStartTime","_getBufferEndTime","getMetadata","metadata","_getLogStartTime","_getLogEndTime","getLookAhead","timestamp","lookAhead","logSynchronizer","Number","isFinite","setTime","setLookAheadTimeOffset","getCurrentFrame","_updateTimer","listeners","forEach","o","_version","_debug","debug","callbacks","state","_updates","eventType","cb","push","index","indexOf","splice","eventArgs","stats","incrementCount","instance","findIndex","key","value","requestAnimationFrame","_update","Error","startTime","getLogStartTime","endTime","getLogEndTime","set","streamBuffer","setCurrentTime","settings","Object","keys","length","StreamSynchronizer","newTimestamp","start_time","seek","timeslice","bufferUpdated","insert","_bumpDataVersion","range","getLoadedTimeRange","start","end","TIME_WINDOW","end_time"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {getXVIZConfig, StreamSynchronizer, LOG_STREAM_MESSAGE} from '@xviz/parser';\nimport {clamp} from 'math.gl';\n\nimport createSelector from '../utils/create-selector';\nimport stats from '../utils/stats';\n\n/* eslint-disable callback-return */\nexport default class XVIZLoaderInterface {\n  constructor(options = {}) {\n    this.options = options;\n    this._debug = options.debug || (() => {});\n    this.callbacks = {};\n\n    this.listeners = [];\n    this.state = {};\n    this._updates = 0;\n    this._version = 0;\n    this._updateTimer = null;\n  }\n\n  /* Event types:\n   * - ready\n   * - update\n   * - finish\n   * - error\n   */\n  on(eventType, cb) {\n    this.callbacks[eventType] = this.callbacks[eventType] || [];\n    this.callbacks[eventType].push(cb);\n    return this;\n  }\n\n  off(eventType, cb) {\n    const callbacks = this.callbacks[eventType];\n    if (callbacks) {\n      const index = callbacks.indexOf(cb);\n      if (index >= 0) {\n        callbacks.splice(index, 1);\n      }\n    }\n    return this;\n  }\n\n  emit(eventType, eventArgs) {\n    const callbacks = this.callbacks[eventType];\n    if (callbacks) {\n      for (const cb of callbacks) {\n        cb(eventType, eventArgs);\n      }\n    }\n    stats.get(`loader-${eventType}`).incrementCount();\n  }\n\n  subscribe(instance) {\n    this.listeners.push(instance);\n  }\n\n  unsubscribe(instance) {\n    const index = this.listeners.findIndex(o => o === instance);\n    if (index >= 0) {\n      this.listeners.splice(index, 1);\n    }\n  }\n\n  get(key) {\n    return this.state[key];\n  }\n\n  set(key, value) {\n    if (this.state[key] !== value) {\n      this.state[key] = value;\n      this._version++;\n      if (!this._updateTimer) {\n        /* global requestAnimationFrame */\n        this._updateTimer = requestAnimationFrame(this._update);\n      }\n    }\n  }\n\n  onXVIZMessage = message => {\n    switch (message.type) {\n      case LOG_STREAM_MESSAGE.METADATA:\n        this._onXVIZMetadata(message);\n        this.emit('ready', message);\n        break;\n\n      case LOG_STREAM_MESSAGE.TIMESLICE:\n        this._onXVIZTimeslice(message);\n        this.emit('update', message);\n        break;\n\n      case LOG_STREAM_MESSAGE.DONE:\n        this.emit('finish', message);\n        break;\n\n      default:\n        this.emit('error', message);\n    }\n  };\n\n  onError = error => {\n    this.emit('error', error);\n  };\n\n  /* Connection API */\n  isOpen() {\n    return false;\n  }\n\n  connect() {\n    throw new Error('not implemented');\n  }\n\n  seek(timestamp) {\n    const metadata = this.getMetadata();\n\n    if (metadata) {\n      const startTime = this.getLogStartTime();\n      const endTime = this.getLogEndTime();\n      if (Number.isFinite(startTime) && Number.isFinite(endTime)) {\n        timestamp = clamp(timestamp, startTime, endTime);\n      }\n    }\n\n    this.set('timestamp', timestamp);\n\n    // Notify the stream buffer of the current play head\n    // for any data management needs.\n    this.streamBuffer.setCurrentTime(timestamp);\n  }\n\n  setLookAhead(lookAhead) {\n    this.set('lookAhead', lookAhead);\n  }\n\n  updateStreamSettings(settings) {\n    const streamSettings = this.get('streamSettings');\n    this.set('streamSettings', {...streamSettings, ...settings});\n  }\n\n  close() {\n    throw new Error('not implemented');\n  }\n\n  /* Data selector API */\n\n  getCurrentTime = () => this.get('timestamp');\n\n  getLookAhead = () => this.get('lookAhead');\n\n  getMetadata = () => this.get('metadata');\n\n  getStreamSettings = () => this.get('streamSettings');\n\n  _getDataVersion = () => this.get('dataVersion');\n\n  _getStreams = createSelector(this, this._getDataVersion, () => this._getDataByStream());\n\n  getBufferedTimeRanges = createSelector(this, this._getDataVersion, () =>\n    this._getBufferedTimeRanges()\n  );\n\n  getStreams = createSelector(\n    this,\n    [this.getStreamSettings, this._getStreams, this._getDataVersion],\n    (streamSettings, streams) => {\n      if (!streamSettings || !streams) {\n        return streams;\n      }\n      const result = {};\n      for (const streamName in streams) {\n        if (streamSettings[streamName]) {\n          result[streamName] = streams[streamName];\n        }\n      }\n      return result;\n    }\n  );\n\n  getBufferStartTime = createSelector(this, this.getCurrentTime, () => this._getBufferStartTime());\n  getBufferEndTime = createSelector(this, this.getCurrentTime, () => this._getBufferEndTime());\n\n  getLogStartTime = createSelector(this, this.getMetadata, metadata =>\n    this._getLogStartTime(metadata)\n  );\n  getLogEndTime = createSelector(this, this.getMetadata, metadata => this._getLogEndTime(metadata));\n\n  getCurrentFrame = createSelector(\n    this,\n    [this.getStreamSettings, this.getCurrentTime, this.getLookAhead, this._getDataVersion],\n    // `dataVersion` is only needed to trigger recomputation.\n    // The logSynchronizer has access to the timeslices.\n    (streamSettings, timestamp, lookAhead) => {\n      const {logSynchronizer} = this;\n      if (logSynchronizer && Number.isFinite(timestamp)) {\n        logSynchronizer.setTime(timestamp);\n        logSynchronizer.setLookAheadTimeOffset(lookAhead);\n        return logSynchronizer.getCurrentFrame(streamSettings);\n      }\n      return null;\n    }\n  );\n\n  /* Private actions */\n  _update = () => {\n    this._updateTimer = null;\n    this.listeners.forEach(o => o(this._version));\n  };\n\n  _bumpDataVersion() {\n    this._updates++;\n    this.set('dataVersion', this._updates);\n  }\n\n  /* Subclass hooks */\n\n  _onXVIZMetadata(metadata) {\n    this.set('metadata', metadata);\n    if (metadata.streams && Object.keys(metadata.streams).length > 0) {\n      this.set('streamSettings', metadata.streams);\n    }\n\n    if (!this.streamBuffer) {\n      throw new Error('streamBuffer is missing');\n    }\n    this.logSynchronizer = this.logSynchronizer || new StreamSynchronizer(this.streamBuffer);\n\n    const timestamp = this.get('timestamp');\n    const newTimestamp = Number.isFinite(timestamp) ? timestamp : metadata.start_time;\n    if (Number.isFinite(newTimestamp)) {\n      this.seek(newTimestamp);\n    }\n  }\n\n  _onXVIZTimeslice(timeslice) {\n    const bufferUpdated = this.streamBuffer.insert(timeslice);\n    if (bufferUpdated) {\n      this._bumpDataVersion();\n    }\n    return bufferUpdated;\n  }\n\n  _getDataByStream() {\n    // XVIZStreamBuffer.getStreams filters out missing streams. This has significant impact\n    // on performance. Here we take the unfiltered slices and only filter them if a stream\n    // is used.\n\n    // return this.streamBuffer.getStreams();\n    return this.streamBuffer.streams;\n  }\n\n  _getBufferedTimeRanges() {\n    const range = this.streamBuffer.getLoadedTimeRange();\n    if (range) {\n      return [[range.start, range.end]];\n    }\n    return [];\n  }\n\n  _getLogStartTime(metadata) {\n    return metadata && metadata.start_time && metadata.start_time + getXVIZConfig().TIME_WINDOW;\n  }\n\n  _getLogEndTime(metadata) {\n    return metadata && metadata.end_time;\n  }\n\n  _getBufferStartTime() {\n    return this.getLogStartTime();\n  }\n\n  _getBufferEndTime() {\n    return this.getLogEndTime();\n  }\n}\n"],"file":"xviz-loader-interface.js"}