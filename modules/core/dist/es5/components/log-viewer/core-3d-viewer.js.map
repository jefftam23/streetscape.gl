{"version":3,"sources":["../../../../src/components/log-viewer/core-3d-viewer.js"],"names":["noop","getStreamMetadata","metadata","streamName","streams","Core3DViewer","props","deckMetrics","debug","metrics","fps","redraw","table","stats","getTable","key","total","reset","viewState","oldViewState","viewOffset","onViewStateChange","info","evt","objectId","object","id","isHovering","Boolean","onHover","isRightClick","which","onContextMenu","onClick","state","styleParser","_getStyleParser","nextProps","viewMode","DEFAULT_VIEW_STATE","initialViewState","x","y","bearing","xvizStyles","setState","frame","get","incrementCount","XVIZStyleParser","styles","car","origin","DEFAULT_ORIGIN","mesh","scale","wireframe","texture","color","SimpleMeshLayer","opacity","coordinateSystem","COORDINATE_SYSTEM","METER_OFFSETS","coordinateOrigin","getTransformMatrix","d","vehicleRelativeTransform","clone","translate","data","CAR_DATA","getPosition","getColor","updateTriggers","showTooltip","objectStates","customLayers","lookAheads","streamFilter","featuresAndFutures","Set","Object","keys","concat","filter","_getCarLayer","Array","from","map","stream","streamMetadata","coordinateProps","stylesheet","getStylesheet","primitives","features","length","XVIZLayer","pickable","style","zIndex","type","pointCloud","sort","layer1","layer2","layer","additionalProps","assign","coordinate","viewport","isPicking","trackedPosition","longitude","trackPosition","latitude","heading","offset","mapboxApiAccessToken","renderObjectLabel","mapStyle","showMap","LIGHTS","_getViewState","_getLayers","_layerFilter","_getCursor","_onLayerHover","_onLayerClick","_onViewStateChange","_onMetrics","firstPerson","selected","children","PureComponent","PropTypes","bool","string","oneOfType","array","func","DEFAULT_CAR","VIEW_MODE","PERSPECTIVE"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {StaticMap} from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\n\nimport ObjectLabelsOverlay from './object-labels-overlay';\n\nimport {SimpleMeshLayer} from '@deck.gl/mesh-layers';\nimport {XVIZStyleParser} from '@xviz/parser';\n\nimport XVIZLayer from '../../layers/xviz-layer';\n\nimport {VIEW_MODE, DEFAULT_VIEW_STATE} from '../../constants';\nimport {getViewStateOffset, getViews, getViewStates} from '../../utils/viewport';\nimport {resolveCoordinateTransform} from '../../utils/transform';\nimport {mergeXVIZStyles} from '../../utils/style';\nimport {normalizeStreamFilter} from '../../utils/stream-utils';\nimport stats from '../../utils/stats';\n\nimport {DEFAULT_ORIGIN, CAR_DATA, LIGHTS, DEFAULT_CAR} from './constants';\n\nconst noop = () => {};\n\nfunction getStreamMetadata(metadata, streamName) {\n  return (metadata && metadata.streams && metadata.streams[streamName]) || {};\n}\n\nexport default class Core3DViewer extends PureComponent {\n  static propTypes = {\n    // Props from loader\n    frame: PropTypes.object,\n    metadata: PropTypes.object,\n\n    // Rendering options\n    showMap: PropTypes.bool,\n    showTooltip: PropTypes.bool,\n    mapboxApiAccessToken: PropTypes.string,\n    mapStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    xvizStyles: PropTypes.object,\n    car: PropTypes.object,\n    viewMode: PropTypes.object,\n    streamFilter: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n      PropTypes.object,\n      PropTypes.func\n    ]),\n    customLayers: PropTypes.array,\n    renderObjectLabel: PropTypes.func,\n    getTransformMatrix: PropTypes.func,\n\n    // Callbacks\n    onHover: PropTypes.func,\n    onClick: PropTypes.func,\n    onContextMenu: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n\n    // Debug info listener\n    debug: PropTypes.func,\n\n    // States\n    viewState: PropTypes.object,\n    viewOffset: PropTypes.object,\n    objectStates: PropTypes.object\n  };\n\n  static defaultProps = {\n    car: DEFAULT_CAR,\n    viewMode: VIEW_MODE.PERSPECTIVE,\n    xvizStyles: {},\n    customLayers: [],\n    onViewStateChange: noop,\n    onHover: noop,\n    onClick: noop,\n    onContextMenu: noop,\n    showMap: true,\n    showTooltip: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      styleParser: this._getStyleParser(props)\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.viewMode !== nextProps.viewMode) {\n      const viewState = {\n        ...this.props.viewState,\n        ...DEFAULT_VIEW_STATE,\n        ...nextProps.viewMode.initialViewState\n      };\n      // Reset offset\n      const viewOffset = {\n        x: 0,\n        y: 0,\n        bearing: 0\n      };\n\n      nextProps.onViewStateChange({viewState, viewOffset});\n    }\n    if (\n      this.props.metadata !== nextProps.metadata ||\n      this.props.xvizStyles !== nextProps.xvizStyles\n    ) {\n      this.setState({\n        styleParser: this._getStyleParser(nextProps)\n      });\n    }\n    if (this.props.frame !== nextProps.frame) {\n      stats.get('frame-update').incrementCount();\n    }\n  }\n\n  _onMetrics = deckMetrics => {\n    if (this.props.debug) {\n      const metrics = {\n        fps: deckMetrics.fps,\n        redraw: deckMetrics.redraw || 0\n      };\n      const table = stats.getTable();\n\n      for (const key in table) {\n        metrics[key] = table[key].total;\n      }\n      this.props.debug(metrics);\n    }\n    stats.reset();\n  };\n\n  _onViewStateChange = ({viewState, oldViewState}) => {\n    const viewOffset = getViewStateOffset(oldViewState, viewState, this.props.viewOffset);\n    this.props.onViewStateChange({viewState, viewOffset});\n  };\n\n  _onLayerHover = (info, evt) => {\n    const objectId = info && info.object && info.object.id;\n    this.isHovering = Boolean(objectId);\n    this.props.onHover(info, evt);\n  };\n\n  _onLayerClick = (info, evt) => {\n    const isRightClick = evt.which === 3;\n\n    if (isRightClick) {\n      this.props.onContextMenu(info, evt);\n    } else {\n      this.props.onClick(info, evt);\n    }\n  };\n\n  _getStyleParser({metadata, xvizStyles}) {\n    return new XVIZStyleParser(mergeXVIZStyles(metadata && metadata.styles, xvizStyles));\n  }\n\n  _getCarLayer() {\n    const {frame, car} = this.props;\n    const {\n      origin = DEFAULT_ORIGIN,\n      mesh,\n      scale = [1, 1, 1],\n      wireframe = false,\n      texture = null,\n      color = [0, 0, 0]\n    } = car;\n\n    return new SimpleMeshLayer({\n      id: 'car',\n      opacity: 1,\n      coordinateSystem: COORDINATE_SYSTEM.METER_OFFSETS,\n      coordinateOrigin: frame.origin || DEFAULT_ORIGIN,\n      // Adjust for car center position relative to GPS/IMU\n      getTransformMatrix: d =>\n        frame.vehicleRelativeTransform\n          .clone()\n          .translate(origin)\n          .scale(scale),\n      mesh,\n      data: CAR_DATA,\n      getPosition: d => d,\n      getColor: color,\n      texture,\n      wireframe,\n      updateTriggers: {\n        getTransformMatrix: frame.vehicleRelativeTransform\n      }\n    });\n  }\n\n  _getLayers() {\n    const {\n      frame,\n      metadata,\n      showTooltip,\n      objectStates,\n      customLayers,\n      getTransformMatrix\n    } = this.props;\n    if (!frame || !metadata) {\n      return [];\n    }\n\n    const {streams, lookAheads = {}} = frame;\n    const {styleParser} = this.state;\n\n    const streamFilter = normalizeStreamFilter(this.props.streamFilter);\n    const featuresAndFutures = new Set(\n      Object.keys(streams)\n        .concat(Object.keys(lookAheads))\n        .filter(streamFilter)\n    );\n\n    return [\n      this._getCarLayer(),\n      Array.from(featuresAndFutures)\n        .map(streamName => {\n          // Check lookAheads first because it will contain the selected futures\n          // while streams would contain the full futures array\n          const stream = lookAheads[streamName] || streams[streamName];\n          const streamMetadata = getStreamMetadata(metadata, streamName);\n          const coordinateProps = resolveCoordinateTransform(\n            frame,\n            streamMetadata,\n            getTransformMatrix\n          );\n\n          const stylesheet = styleParser.getStylesheet(streamName);\n\n          // Support both features and lookAheads, respectively\n          const primitives = stream.features || stream;\n          if (primitives && primitives.length) {\n            return new XVIZLayer({\n              id: `xviz-${streamName}`,\n              ...coordinateProps,\n\n              pickable: showTooltip || primitives[0].id,\n\n              data: primitives,\n              style: stylesheet,\n              objectStates,\n\n              // Hack: draw extruded polygons last to defeat depth test when rendering translucent objects\n              // This is not used by deck.gl, only used in this function to sort the layers\n              zIndex: primitives[0].type === 'polygon' ? 2 : 0,\n\n              // Selection props (app defined, not used by deck.gl)\n              streamName\n            });\n          }\n          if (stream.pointCloud) {\n            return new XVIZLayer({\n              id: `xviz-${streamName}`,\n              ...coordinateProps,\n\n              pickable: showTooltip,\n\n              data: stream.pointCloud,\n              style: stylesheet,\n              vehicleRelativeTransform: frame.vehicleRelativeTransform,\n\n              // Hack: draw point clouds before polygons to defeat depth test when rendering translucent objects\n              // This is not used by deck.gl, only used in this function to sort the layers\n              zIndex: 1,\n\n              streamName\n            });\n          }\n          return null;\n        })\n        .filter(Boolean)\n        .sort((layer1, layer2) => layer1.props.zIndex - layer2.props.zIndex),\n      customLayers.map(layer => {\n        // Clone layer props\n        const {props} = layer;\n        const additionalProps = {};\n\n        if (props.streamName) {\n          // Use log data\n          const stream = streams[props.streamName];\n          const streamMetadata = getStreamMetadata(metadata, props.streamName);\n          Object.assign(\n            additionalProps,\n            resolveCoordinateTransform(frame, streamMetadata, getTransformMatrix),\n            {\n              data: stream && stream.features\n            }\n          );\n        } else if (props.coordinate) {\n          // Apply log-specific coordinate props\n          Object.assign(\n            additionalProps,\n            resolveCoordinateTransform(frame, props, getTransformMatrix)\n          );\n        } else {\n          return layer;\n        }\n\n        return layer.clone(additionalProps);\n      })\n    ];\n  }\n\n  _layerFilter({layer, viewport, isPicking}) {\n    if (viewport.id === 'driver') {\n      return layer.id !== 'car';\n    }\n    return true;\n  }\n\n  _getCursor = () => {\n    return this.isHovering ? 'pointer' : 'crosshair';\n  };\n\n  _getViewState() {\n    const {viewMode, frame, viewState, viewOffset} = this.props;\n\n    const trackedPosition = frame\n      ? {\n          longitude: frame.trackPosition[0],\n          latitude: frame.trackPosition[1],\n          bearing: 90 - frame.heading\n        }\n      : null;\n\n    return getViewStates({viewState, viewMode, trackedPosition, offset: viewOffset});\n  }\n\n  render() {\n    const {\n      mapboxApiAccessToken,\n      frame,\n      metadata,\n      objectStates,\n      renderObjectLabel,\n      getTransformMatrix,\n      style,\n      mapStyle,\n      viewMode,\n      showMap\n    } = this.props;\n    const {styleParser} = this.state;\n\n    return (\n      <DeckGL\n        width=\"100%\"\n        height=\"100%\"\n        effects={[LIGHTS]}\n        views={getViews(viewMode)}\n        viewState={this._getViewState()}\n        layers={this._getLayers()}\n        layerFilter={this._layerFilter}\n        getCursor={this._getCursor}\n        onHover={this._onLayerHover}\n        onClick={this._onLayerClick}\n        onViewStateChange={this._onViewStateChange}\n        _onMetrics={this._onMetrics}\n      >\n        {showMap && (\n          <StaticMap\n            reuseMap={true}\n            attributionControl={false}\n            mapboxApiAccessToken={mapboxApiAccessToken}\n            mapStyle={mapStyle}\n            visible={frame && frame.origin && !viewMode.firstPerson}\n          />\n        )}\n\n        <ObjectLabelsOverlay\n          objectSelection={objectStates.selected}\n          frame={frame}\n          metadata={metadata}\n          renderObjectLabel={renderObjectLabel}\n          xvizStyleParser={styleParser}\n          style={style}\n          getTransformMatrix={getTransformMatrix}\n        />\n\n        {this.props.children}\n      </DeckGL>\n    );\n  }\n}\n"],"file":"core-3d-viewer.js"}