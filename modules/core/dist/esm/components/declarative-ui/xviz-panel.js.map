{"version":3,"sources":["../../../../src/components/declarative-ui/xviz-panel.js"],"names":["React","PureComponent","PropTypes","XVIZContainer","XVIZMetric","XVIZPlot","XVIZTable","XVIZVideo","connectToLog","DEFAULT_COMPONENTS","container","metric","plot","video","table","treetable","XVIZPanelComponent","item","i","props","components","componentProps","log","style","XVIZComponent","type","customProps","children","map","_renderItem","uiConfig","name","string","isRequired","object","getLogState","ownProps","metadata","getMetadata","ui_config","Component"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport XVIZContainer from './xviz-container';\nimport XVIZMetric from './xviz-metric';\nimport XVIZPlot from './xviz-plot';\nimport XVIZTable from './xviz-table';\nimport XVIZVideo from './xviz-video';\n\nimport connectToLog from '../connect';\n\n// xviz type to component map\nconst DEFAULT_COMPONENTS = {\n  container: XVIZContainer,\n  metric: XVIZMetric,\n  plot: XVIZPlot,\n  video: XVIZVideo,\n  table: XVIZTable,\n  treetable: XVIZTable\n};\n\nclass XVIZPanelComponent extends PureComponent {\n  static propTypes = {\n    // User configuration\n    name: PropTypes.string.isRequired,\n    components: PropTypes.object,\n    componentProps: PropTypes.object,\n    style: PropTypes.object,\n\n    // From connected log\n    uiConfig: PropTypes.object\n  };\n\n  static defaultProps = {\n    style: {},\n    components: {},\n    componentProps: {}\n  };\n\n  _renderItem = (item, i) => {\n    const {components, componentProps, log, style} = this.props;\n    const XVIZComponent = components[item.type] || DEFAULT_COMPONENTS[item.type];\n    const customProps = componentProps[item.type];\n\n    if (!XVIZComponent) {\n      return null;\n    }\n\n    return (\n      <XVIZComponent key={i} {...customProps} {...item} log={log} style={style[item.type]}>\n        {item.children && item.children.map(this._renderItem)}\n      </XVIZComponent>\n    );\n  };\n\n  render() {\n    const {uiConfig} = this.props;\n\n    return uiConfig ? (\n      <div>{uiConfig.children && uiConfig.children.map(this._renderItem)}</div>\n    ) : null;\n  }\n}\n\nconst getLogState = (log, ownProps) => {\n  const metadata = log.getMetadata();\n  return {\n    uiConfig: metadata && metadata.ui_config && metadata.ui_config[ownProps.name]\n  };\n};\n\nexport default connectToLog({getLogState, Component: XVIZPanelComponent});\n"],"file":"xviz-panel.js"}