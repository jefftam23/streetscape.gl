{"version":3,"sources":["../../../src/loaders/xviz-stream-loader.js"],"names":["assert","getXVIZConfig","XVIZWebsocketLoader","rangeUtils","DEFAULT_LOG_PROFILE","DEFAULT_RETRY_ATTEMPTS","DEFAULT_BUFFER_LENGTH","seconds","milliseconds","getSocketRequestParams","options","logGuid","logProfile","timestamp","serverConfig","bufferLength","TIMESTAMP_FORMAT","duration","defaultLogLength","queryParams","log","profile","retryAttempts","Number","isInteger","qs","Object","keys","map","key","join","url","serverUrl","updateSocketRequestParams","metadata","bufferRange","start_time","logStartTime","Infinity","end_time","logEndTime","totalDuration","chunkSize","isFinite","startTimestamp","endTimestamp","bufferStart","bufferEnd","Math","max","min","newBufferRange","subtract","length","start","end","XVIZStreamLoader","lastRequest","xvizHandler","transformLog","requestParams","retrySettings","retries","minTimeout","randomize","empty","getCurrentTime","streamBuffer","isInBufferRange","getMetadata","params","updateFixedBuffer","intersect","isOpen","message","bufferUpdated","add"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable camelcase */\nimport assert from 'assert';\nimport {getXVIZConfig} from '@xviz/parser';\n\nimport XVIZWebsocketLoader from './xviz-websocket-loader';\nimport * as rangeUtils from '../utils/buffer-range';\n\nconst DEFAULT_LOG_PROFILE = 'default';\nconst DEFAULT_RETRY_ATTEMPTS = 3;\nconst DEFAULT_BUFFER_LENGTH = {\n  seconds: 30,\n  milliseconds: 30000\n};\n\nfunction getSocketRequestParams(options) {\n  const {\n    logGuid,\n    logProfile = DEFAULT_LOG_PROFILE,\n    timestamp,\n    serverConfig,\n    bufferLength = DEFAULT_BUFFER_LENGTH[getXVIZConfig().TIMESTAMP_FORMAT]\n  } = options;\n\n  // set duration overrides & defaults\n  const duration = options.duration || serverConfig.defaultLogLength;\n\n  assert(logGuid && duration);\n\n  const queryParams = {\n    ...serverConfig.queryParams,\n    log: logGuid,\n    profile: logProfile\n  };\n  const retryAttempts = Number.isInteger(serverConfig.retryAttempts)\n    ? serverConfig.retryAttempts\n    : DEFAULT_RETRY_ATTEMPTS;\n\n  const qs = Object.keys(queryParams)\n    .map(key => `${key}=${queryParams[key]}`)\n    .join('&');\n\n  return {\n    url: `${serverConfig.serverUrl}?${qs}`,\n    logGuid,\n    logProfile,\n    duration,\n    timestamp,\n    bufferLength,\n    retryAttempts,\n    serverConfig\n  };\n}\n\n// Determine timestamp & duration to reconnect after an interrupted connection.\n// Calculate based on current XVIZStreamBuffer data\n// Returns null if update is not needed\nexport function updateSocketRequestParams(timestamp, metadata, bufferLength, bufferRange) {\n  const {start_time: logStartTime = -Infinity, end_time: logEndTime = Infinity} = metadata;\n  const totalDuration = logEndTime - logStartTime;\n  const chunkSize = bufferLength || totalDuration;\n\n  if (!Number.isFinite(totalDuration)) {\n    // If there is no start/end time in metadata, buffer length must be supplied\n    assert(bufferLength, 'bufferLength is invalid');\n  }\n  if (chunkSize >= totalDuration) {\n    // Unlimited buffer\n    return {\n      startTimestamp: logStartTime,\n      endTimestamp: logEndTime,\n      bufferStart: logStartTime,\n      bufferEnd: logEndTime\n    };\n  }\n\n  const bufferStart = Math.max(timestamp - chunkSize / 2, logStartTime);\n  const bufferEnd = Math.min(bufferStart + chunkSize, logEndTime);\n  const newBufferRange = rangeUtils.subtract([bufferStart, bufferEnd], bufferRange);\n\n  if (newBufferRange.length === 0) {\n    return null;\n  }\n  const start = newBufferRange[0][0];\n  const end = newBufferRange[newBufferRange.length - 1][1];\n\n  return {\n    startTimestamp: start,\n    endTimestamp: end,\n    bufferStart,\n    bufferEnd\n  };\n}\n\nexport default class XVIZStreamLoader extends XVIZWebsocketLoader {\n  /**\n   * constructor\n   * @params serverConfig {object}\n   *   - serverConfig.serverUrl {string}\n   *   - serverConfig.defaultLogLength {number, optional} - default 30\n   *   - serverConfig.queryParams {object, optional}\n   *   - serverConfig.retryAttempts {number, optional} - default 3\n   * @params worker {string|function, optional}\n   * @params maxConcurrency {number, optional} - default 3\n   * @params logGuid {string}\n   * @params logProfile {string, optional}\n   * @params duration {number, optional}\n   * @params timestamp {number, optional}\n   * @params bufferLength {number, optional}\n   */\n  constructor(options = {}) {\n    super(options);\n\n    // Construct websocket connection details from parameters\n    this.requestParams = getSocketRequestParams(options);\n    assert(this.requestParams.bufferLength, 'bufferLength must be provided');\n\n    this.retrySettings = {\n      retries: this.requestParams.retryAttempts,\n      minTimeout: 500,\n      randomize: true\n    };\n\n    // Reconnection state\n    this.lastRequest = null;\n    this.bufferRange = rangeUtils.empty();\n  }\n\n  seek(timestamp) {\n    super.seek(timestamp);\n\n    // use clamped/rounded timestamp\n    timestamp = this.getCurrentTime();\n\n    if (this.lastRequest && this.streamBuffer.isInBufferRange(timestamp)) {\n      // Already loading\n      return;\n    }\n\n    const metadata = this.getMetadata();\n    if (!metadata) {\n      return;\n    }\n\n    const params = updateSocketRequestParams(\n      timestamp,\n      metadata,\n      this.requestParams.bufferLength,\n      this.bufferRange\n    );\n    if (!params) {\n      return;\n    }\n\n    this.lastRequest = params;\n\n    // prune buffer\n    this.streamBuffer.updateFixedBuffer(params.bufferStart, params.bufferEnd);\n    this.bufferRange = rangeUtils.intersect(\n      [params.bufferStart, params.bufferEnd],\n      this.bufferRange\n    );\n\n    if (this.isOpen()) {\n      this.xvizHandler.transformLog(params);\n    } else {\n      // Wait for socket to connect\n    }\n  }\n\n  /* Hook overrides */\n  _onOpen = () => {\n    if (this.lastRequest) {\n      this.xvizHandler.transformLog(this.lastRequest);\n    }\n  };\n\n  _getBufferedTimeRanges() {\n    return this.bufferRange;\n  }\n\n  _getBufferStartTime() {\n    return this.lastRequest && this.lastRequest.bufferStart;\n  }\n\n  _getBufferEndTime() {\n    return this.lastRequest && this.lastRequest.bufferEnd;\n  }\n\n  _onXVIZTimeslice(message) {\n    const bufferUpdated = super._onXVIZTimeslice(message);\n    if (bufferUpdated) {\n      this.bufferRange = rangeUtils.add(\n        [this.lastRequest.startTimestamp, message.timestamp],\n        this.bufferRange\n      );\n    }\n  }\n}\n"],"file":"xviz-stream-loader.js"}