{"version":3,"sources":["../../../src/components/stream-settings-panel.js"],"names":["React","PureComponent","PropTypes","Form","CheckBox","evaluateStyle","styled","connectToLog","Badge","div","props","content","type","userStyle","getParentKey","streamName","i","indexOf","slice","getParentValue","children","values","parentValue","key","value","INDETERMINATE","createFormData","metadata","opts","root","style","parentKey","siblings","badge","title","replace","primitive_type","scalar_type","settingsToFormValues","data","settings","ON","OFF","updateFormValues","oldValues","newValues","formValuesToSettings","StreamSettingsPanel","constructor","streamMetadata","log","onSettingsChange","state","updateStreamSettings","streamSettings","componentWillReceiveProps","nextProps","setState","render","_onValuesChange","object","func","getLogState","getMetadata","streams","getStreamSettings","Component"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {Form, CheckBox, evaluateStyle} from '@streetscape.gl/monochrome';\nimport styled from '@emotion/styled';\n\nimport connectToLog from './connect';\n\nconst Badge = styled.div(props => ({\n  '&:before': {\n    content: `\"${props.type || ''}\"`\n  },\n  ...evaluateStyle(props.userStyle, props)\n}));\n\nfunction getParentKey(streamName) {\n  const i = streamName.indexOf('/', 1);\n  if (i > 1) {\n    return streamName.slice(0, i);\n  }\n  return '';\n}\n\nfunction getParentValue(children, values) {\n  let parentValue = null;\n  for (const key in children) {\n    const value = values[key];\n    if (parentValue === null) {\n      parentValue = value;\n    } else if (parentValue !== value) {\n      return CheckBox.INDETERMINATE;\n    }\n  }\n  return parentValue;\n}\n\n// Created 1-level nested form structure\nexport function createFormData(metadata, opts) {\n  if (!metadata) {\n    return null;\n  }\n\n  const root = {};\n  const {style = {}} = opts;\n\n  for (const streamName in metadata) {\n    const parentKey = getParentKey(streamName);\n    let siblings = root;\n\n    if (parentKey) {\n      root[parentKey] = root[parentKey] || {\n        type: 'checkbox',\n        children: {},\n        badge: <Badge userStyle={style.badge} />\n      };\n      siblings = root[parentKey].children;\n    }\n\n    siblings[streamName] = {\n      type: 'checkbox',\n      title: streamName.replace(parentKey, ''),\n      badge: (\n        <Badge\n          userStyle={style.badge}\n          type={metadata[streamName].primitive_type || metadata[streamName].scalar_type}\n        />\n      )\n    };\n  }\n\n  return root;\n}\n\nexport function settingsToFormValues(data, settings) {\n  if (!data || !settings) {\n    return null;\n  }\n\n  const values = {};\n  for (const key in data) {\n    const {children} = data[key];\n    if (children) {\n      // is parent\n      for (const streamName in children) {\n        values[streamName] = settings[streamName] ? CheckBox.ON : CheckBox.OFF;\n      }\n      values[key] = getParentValue(children, values);\n    } else {\n      // is leaf\n      values[key] = settings[key] ? CheckBox.ON : CheckBox.OFF;\n    }\n  }\n  return values;\n}\n\nexport function updateFormValues(data, oldValues, newValues) {\n  const values = {...oldValues, ...newValues};\n  for (const key in newValues) {\n    if (data[key] && data[key].children) {\n      // is parent, reset child values\n      for (const streamName in data[key].children) {\n        values[streamName] = newValues[key];\n      }\n    } else {\n      // is leaf, re-evaluate parent value\n      const parentKey = getParentKey(key);\n      if (parentKey) {\n        values[parentKey] = getParentValue(data[parentKey].children, values);\n      }\n    }\n  }\n  return values;\n}\n\nexport function formValuesToSettings(metadata, values) {\n  const settings = {};\n  for (const streamName in metadata) {\n    settings[streamName] = values[streamName] === CheckBox.ON;\n  }\n  return settings;\n}\n\nclass StreamSettingsPanel extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    streamMetadata: PropTypes.object,\n    onSettingsChange: PropTypes.func\n  };\n\n  static defaultProps = {\n    style: {},\n    onSettingsChange: () => {}\n  };\n\n  constructor(props) {\n    super(props);\n\n    const data = createFormData(props.streamMetadata, props);\n    const values = settingsToFormValues(data, props.streamSettings);\n    this.state = {data, values};\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let {data, values} = this.state;\n\n    if (nextProps.streamMetadata !== this.props.streamMetadata) {\n      data = createFormData(nextProps.streamMetadata, nextProps);\n      values = null;\n    }\n    if (nextProps.streamSettings !== this.props.streamSettings) {\n      values = settingsToFormValues(data, nextProps.streamSettings);\n    }\n    this.setState({data, values});\n  }\n\n  _onValuesChange = newValues => {\n    const {streamMetadata, log, onSettingsChange} = this.props;\n    const {data} = this.state;\n    const values = updateFormValues(data, this.state.values, newValues);\n    const settings = formValuesToSettings(streamMetadata, values);\n\n    if (!onSettingsChange(settings) && log) {\n      log.updateStreamSettings(settings);\n    }\n  };\n\n  render() {\n    const {style} = this.props;\n    const {data, values} = this.state;\n\n    if (!data || !values) {\n      return null;\n    }\n\n    return <Form style={style} data={data} values={values} onChange={this._onValuesChange} />;\n  }\n}\n\nconst getLogState = log => {\n  const metadata = log.getMetadata();\n  return {\n    streamMetadata: metadata && metadata.streams,\n    streamSettings: log.getStreamSettings()\n  };\n};\n\nexport default connectToLog({getLogState, Component: StreamSettingsPanel});\n"],"file":"stream-settings-panel.js"}