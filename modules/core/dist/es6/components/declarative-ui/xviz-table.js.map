{"version":3,"sources":["../../../../src/components/declarative-ui/xviz-table.js"],"names":["React","PureComponent","Table","TreeTable","Tooltip","PropTypes","connectToLog","XVIZTableComponent","constructor","props","state","_formatData","componentWillReceiveProps","nextProps","columns","nodes","setState","displayObjectId","map","col","name","display_text","type","rowIds","rows","forEach","node","row","data","column_values","children","id","parent","undefined","push","parentRow","render","console","log","title","description","width","height","style","renderHeader","renderCell","indentSize","Component","oneOfType","string","number","object","func","stream","bool","array","column","value","String","getLogState","ownProps","frame","getCurrentFrame","streams","treetable"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {PureComponent} from 'react';\nimport {Table, TreeTable, Tooltip} from '@streetscape.gl/monochrome';\nimport PropTypes from 'prop-types';\n\nimport connectToLog from '../connect';\n\nclass XVIZTableComponent extends PureComponent {\n  static propTypes = {\n    // UI configuration\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    style: PropTypes.object,\n    renderHeader: PropTypes.func,\n    renderCell: PropTypes.func,\n    indentSize: PropTypes.number,\n\n    // From declarative UI table component\n    stream: PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    displayObjectId: PropTypes.bool,\n\n    // From connected log\n    columns: PropTypes.array,\n    nodes: PropTypes.array\n  };\n\n  static defaultProps = {\n    width: '100%',\n    height: 400,\n    style: {},\n    indentSize: 12,\n    renderHeader: ({column}) => column.name,\n    renderCell: ({value}) => (value === null ? null : String(value))\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...this._formatData(props)\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.columns !== this.props.columns || nextProps.nodes !== this.props.nodes) {\n      this.setState(this._formatData(nextProps));\n    }\n  }\n\n  _formatData({columns, nodes, displayObjectId}) {\n    if (!columns || !nodes) {\n      return {columns: null};\n    }\n\n    columns = columns.map(col => ({\n      name: col.display_text,\n      type: col.type\n    }));\n\n    const rowIds = {};\n    const rows = [];\n\n    nodes.forEach(node => {\n      const row = {\n        data: node.column_values || [],\n        children: []\n      };\n      rowIds[node.id] = row;\n\n      if (node.parent === undefined) {\n        rows.push(row);\n      } else {\n        const parentRow = rowIds[node.parent];\n        if (parentRow) {\n          parentRow.children.push(row);\n        }\n      }\n    });\n\n    return {columns, rows};\n  }\n\n  render() {\n    console.log('JEFF: Hello from my fork');\n\n    const {columns, rows} = this.state;\n\n    if (!columns) {\n      // TODO - show loading message\n      return null;\n    }\n\n    const {\n      title,\n      description,\n      width,\n      height,\n      style,\n      renderHeader,\n      renderCell,\n      indentSize,\n      type\n    } = this.props;\n    const Component = type === 'table' ? Table : TreeTable;\n\n    return (\n      <div style={{width, height}}>\n        <Tooltip content={description}>\n          <h4>{title}</h4>\n        </Tooltip>\n        <Component\n          width=\"100%\"\n          height=\"100%\"\n          style={style}\n          renderHeader={renderHeader}\n          renderCell={renderCell}\n          indentSize={indentSize}\n          columns={columns}\n          rows={rows}\n        />\n      </div>\n    );\n  }\n}\n\nconst getLogState = (log, ownProps) => {\n  const frame = log.getCurrentFrame();\n  const data = frame && frame.streams[ownProps.stream];\n  return data && data.treetable;\n};\n\nexport default connectToLog({getLogState, Component: XVIZTableComponent});\n"],"file":"xviz-table.js"}