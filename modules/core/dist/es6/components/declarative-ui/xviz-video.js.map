{"version":3,"sources":["../../../../src/components/declarative-ui/xviz-video.js"],"names":["React","PureComponent","PropTypes","styled","Dropdown","withTheme","evaluateStyle","ImageSequence","connectToLog","normalizeStreamFilter","WrapperComponent","span","props","theme","__reset__","position","userStyle","BaseComponent","constructor","streamName","setState","selectedStreamName","state","_getStreamNames","componentWillReceiveProps","nextProps","streamMetadata","cameras","streamNames","Object","keys","filter","primitive_type","sort","includes","_renderVideoSelector","style","length","data","forEach","name","selector","_onSelectVideo","render","currentTime","streams","width","height","images","Boolean","wrapper","object","oneOfType","number","string","array","func","getLogState","log","metadata","getMetadata","getCurrentTime","getStreams","XVIZVideoComponent","Component"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from '@emotion/styled';\nimport {Dropdown, withTheme, evaluateStyle} from '@streetscape.gl/monochrome';\nimport ImageSequence from './image-sequence';\nimport connectToLog from '../connect';\n\nimport {normalizeStreamFilter} from '../../utils/stream-utils';\n\nconst WrapperComponent = styled.span(props => ({\n  ...props.theme.__reset__,\n  position: 'relative',\n  ...evaluateStyle(props.userStyle, props)\n}));\n\nclass BaseComponent extends PureComponent {\n  static propTypes = {\n    // User configuration\n    style: PropTypes.object,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // From declarative UI video component\n    cameras: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n      PropTypes.object,\n      PropTypes.func\n    ]),\n\n    // From connected log\n    currentTime: PropTypes.number,\n    streamMetadata: PropTypes.object,\n    streams: PropTypes.object\n  };\n\n  static defaultProps = {\n    style: {},\n    width: '100%',\n    height: 'auto'\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...this._getStreamNames(props)\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.props.streamMetadata !== nextProps.streamMetadata ||\n      this.props.cameras !== nextProps.cameras\n    ) {\n      this.setState(this._getStreamNames(nextProps));\n    }\n  }\n\n  _getStreamNames({streamMetadata, cameras}) {\n    if (!streamMetadata) {\n      return {\n        streamNames: null,\n        selectedStreamName: null\n      };\n    }\n\n    const streamNames = Object.keys(streamMetadata)\n      .filter(\n        streamName =>\n          streamMetadata[streamName] && streamMetadata[streamName].primitive_type === 'image'\n      )\n      .filter(normalizeStreamFilter(cameras))\n      .sort();\n    let {selectedStreamName} = this.state || {};\n    if (!streamNames.includes(selectedStreamName)) {\n      selectedStreamName = streamNames[0] || null;\n    }\n    return {selectedStreamName, streamNames};\n  }\n\n  _onSelectVideo = streamName => {\n    this.setState({selectedStreamName: streamName});\n  };\n\n  _renderVideoSelector() {\n    const {style} = this.props;\n    const {streamNames, selectedStreamName} = this.state;\n\n    if (streamNames.length <= 1) {\n      return null;\n    }\n\n    const data = {};\n    streamNames.forEach(name => {\n      // TODO - use display name from metadata\n      data[name] = name;\n    });\n\n    return (\n      <Dropdown\n        style={style.selector}\n        value={selectedStreamName}\n        data={data}\n        onChange={this._onSelectVideo}\n      />\n    );\n  }\n\n  render() {\n    const {currentTime, streams, width, height, style, theme} = this.props;\n    const {selectedStreamName} = this.state;\n\n    if (!streams || !currentTime || !selectedStreamName) {\n      return null;\n    }\n    let images = streams[selectedStreamName];\n    if (images) {\n      images = images.filter(Boolean);\n    }\n\n    return (\n      <WrapperComponent theme={theme} userStyle={style.wrapper}>\n        <ImageSequence width={width} height={height} src={images} currentTime={currentTime} />\n\n        {this._renderVideoSelector()}\n      </WrapperComponent>\n    );\n  }\n}\n\nconst getLogState = log => {\n  const metadata = log.getMetadata();\n  return {\n    currentTime: log.getCurrentTime(),\n    streamMetadata: metadata && metadata.streams,\n    streams: log.getStreams()\n  };\n};\n\nconst XVIZVideoComponent = withTheme(BaseComponent);\n\nexport default connectToLog({getLogState, Component: XVIZVideoComponent});\n"],"file":"xviz-video.js"}