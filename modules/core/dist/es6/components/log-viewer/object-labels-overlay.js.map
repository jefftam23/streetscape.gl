{"version":3,"sources":["../../../../src/components/log-viewer/object-labels-overlay.js"],"names":["React","PureComponent","PropTypes","_MapContext","MapContext","PerspectivePopup","resolveCoordinateTransform","positionToLngLat","renderDefaultObjectLabel","id","isSelected","ObjectLabelsOverlay","constructor","props","object","objectSelection","frame","xvizStyleParser","style","renderObjectLabel","Boolean","styleProps","xvizStyles","labelContent","trackingPoint","objectHeight","streamName","streamNames","feature","getFeature","center","vertices","position","_getCoordinateProps","getStylesheet","getProperty","origin","state","coordinateProps","componentWillReceiveProps","nextProps","setState","result","metadata","getTransformMatrix","streamMetadata","streams","render","viewport","Object","values","objects","map","_renderPerspectivePopup","func"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// @flow\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {_MapContext as MapContext} from 'react-map-gl';\n\nimport PerspectivePopup from './perspective-popup';\n\nimport {resolveCoordinateTransform, positionToLngLat} from '../../utils/transform';\n\nconst renderDefaultObjectLabel = ({id, isSelected}) => isSelected && <div>ID: {id}</div>;\n\nexport default class ObjectLabelsOverlay extends PureComponent {\n  static propTypes = {\n    objectSelection: PropTypes.object,\n    frame: PropTypes.object,\n    metadata: PropTypes.object,\n    xvizStyleParser: PropTypes.object,\n\n    renderObjectLabel: PropTypes.func,\n    style: PropTypes.object,\n    getTransformMatrix: PropTypes.func\n  };\n\n  static defaultProps = {\n    objectSelection: {},\n    renderObjectLabel: renderDefaultObjectLabel,\n    style: {}\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      coordinateProps: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {frame} = nextProps;\n\n    if (frame && frame !== this.props.frame) {\n      this.setState({\n        coordinateProps: {}\n      });\n    }\n  }\n\n  _getCoordinateProps(streamName) {\n    const {coordinateProps} = this.state;\n    let result = coordinateProps[streamName];\n\n    if (result) {\n      return result;\n    }\n\n    const {frame, metadata, getTransformMatrix} = this.props;\n    const streamMetadata = metadata.streams && metadata.streams[streamName];\n    result = resolveCoordinateTransform(frame, streamMetadata, getTransformMatrix);\n    // cache calculated coordinate props by stream name\n    coordinateProps[streamName] = result;\n\n    return result;\n  }\n\n  _renderPerspectivePopup = object => {\n    const {objectSelection, frame, xvizStyleParser, style, renderObjectLabel} = this.props;\n\n    const isSelected = Boolean(objectSelection[object.id]);\n    const styleProps = {\n      id: object.id,\n      isSelected,\n      object,\n      xvizStyles: xvizStyleParser\n    };\n\n    const labelContent = renderObjectLabel(styleProps);\n\n    if (!labelContent) {\n      return null;\n    }\n\n    let trackingPoint;\n    let objectHeight;\n\n    for (const streamName of object.streamNames) {\n      const feature = object.getFeature(streamName);\n      if (!trackingPoint && (feature.center || feature.vertices)) {\n        trackingPoint = positionToLngLat(object.position, this._getCoordinateProps(streamName));\n      }\n      if (!objectHeight && feature.vertices) {\n        objectHeight = xvizStyleParser.getStylesheet(streamName).getProperty('height', feature);\n      }\n    }\n\n    trackingPoint[2] += objectHeight || 0;\n\n    // compensate for camera offset\n    if (frame.origin) {\n      trackingPoint[2] -= frame.origin[2];\n    }\n\n    return (\n      <PerspectivePopup\n        key={object.id}\n        longitude={trackingPoint[0]}\n        latitude={trackingPoint[1]}\n        altitude={trackingPoint[2]}\n        anchor=\"bottom-left\"\n        dynamicPosition={true}\n        styleProps={styleProps}\n        style={style}\n        sortByDepth={true}\n        closeButton={false}\n        closeOnClick={false}\n      >\n        {labelContent}\n      </PerspectivePopup>\n    );\n  };\n\n  render() {\n    const {frame, viewport, renderObjectLabel} = this.props;\n\n    if (!frame || !renderObjectLabel) {\n      return null;\n    }\n\n    return (\n      <MapContext.Provider value={{viewport}}>\n        {Object.values(frame.objects).map(this._renderPerspectivePopup)}\n      </MapContext.Provider>\n    );\n  }\n}\n"],"file":"object-labels-overlay.js"}