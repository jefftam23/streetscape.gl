{"version":3,"sources":["../../../../src/layers/point-cloud-layer/point-cloud-layer.js"],"names":["PointCloudLayer","CorePointCloudLayer","vs","COLOR_MODE","default","elevation","distance_to_vehicle","COLOR_DOMAIN","defaultProps","colorMode","colorDomain","getShaders","shaders","updateState","params","props","oldProps","modelMatrix","vehicleRelativeTransform","vehicleDistanceTransform","clone","invert","multiplyRight","setState","instanceColors","getAttributeManager","getAttributes","colorSize","length","numInstances","size","draw","uniforms","pointSize","state","model","setUniforms","Object","assign","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {PointCloudLayer as CorePointCloudLayer} from '@deck.gl/layers';\n\nimport vs from './point-cloud-layer-vertex.glsl';\n\n/* eslint-disable camelcase */\nconst COLOR_MODE = {\n  default: 0,\n  elevation: 1,\n  distance_to_vehicle: 2\n};\n\nconst COLOR_DOMAIN = {\n  default: [0, 0],\n  elevation: [0, 3],\n  distance_to_vehicle: [0, 60]\n};\n/* eslint-enable camelcase */\n\nconst defaultProps = {\n  colorMode: 'default',\n  colorDomain: null\n};\n\nexport default class PointCloudLayer extends CorePointCloudLayer {\n  getShaders() {\n    const shaders = super.getShaders();\n    shaders.vs = vs;\n    return shaders;\n  }\n\n  updateState(params) {\n    super.updateState(params);\n\n    const {props, oldProps} = params;\n    if (\n      props.modelMatrix !== oldProps.modelMatrix ||\n      props.vehicleRelativeTransform !== oldProps.vehicleRelativeTransform\n    ) {\n      const vehicleDistanceTransform = props.vehicleRelativeTransform.clone().invert();\n      if (props.modelMatrix) {\n        vehicleDistanceTransform.multiplyRight(props.modelMatrix);\n      }\n      this.setState({\n        vehicleDistanceTransform\n      });\n    }\n\n    if (props.instanceColors !== oldProps.instanceColors) {\n      const {instanceColors} = this.getAttributeManager().getAttributes();\n      const colorSize = props.instanceColors ? props.instanceColors.length / props.numInstances : 4;\n      instanceColors.size = colorSize;\n      this.setState({colorSize});\n    }\n  }\n\n  draw({uniforms}) {\n    const {pointSize, colorMode, colorDomain} = this.props;\n    const {vehicleDistanceTransform, colorSize} = this.state;\n\n    this.state.model\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          pointSize,\n          colorSize,\n          colorMode: COLOR_MODE[colorMode] || COLOR_MODE.default,\n          colorDomain: colorDomain || COLOR_DOMAIN[colorMode] || COLOR_DOMAIN.default,\n          vehicleDistanceTransform\n        })\n      )\n      .draw();\n  }\n}\n\nPointCloudLayer.layerName = 'PointCloudLayer';\nPointCloudLayer.defaultProps = defaultProps;\n"],"file":"point-cloud-layer.js"}