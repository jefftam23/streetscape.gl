{"version":3,"sources":["../../../src/utils/viewport.js"],"names":["WebMercatorViewport","MapView","FirstPersonView","getViewStateOffset","oldViewState","viewState","oldOffset","oldViewport","oldPos","width","x","height","y","trackedLngLat","unproject","newViewport","newPos","project","bearing","offsetViewState","offset","shiftedViewState","helperViewport","pos","lngLat","longitude","latitude","getLocationAtPoint","getViews","viewMode","name","orthographic","firstPerson","mapInteraction","controllerProps","keyboard","id","fovy","near","far","focalDistance","controller","getViewStates","trackedPosition","tracked","viewStates","position","heading"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport WebMercatorViewport from 'viewport-mercator-project';\nimport {MapView, FirstPersonView} from '@deck.gl/core';\n\nexport function getViewStateOffset(oldViewState, viewState, oldOffset) {\n  if (!oldViewState) {\n    return oldOffset;\n  }\n\n  const oldViewport = new WebMercatorViewport(oldViewState);\n  const oldPos = [oldViewport.width / 2 + oldOffset.x, oldViewport.height / 2 + oldOffset.y];\n  const trackedLngLat = oldViewport.unproject(oldPos);\n\n  const newViewport = new WebMercatorViewport(viewState);\n  const newPos = newViewport.project(trackedLngLat);\n\n  return {\n    x: oldOffset.x + newPos[0] - oldPos[0],\n    y: oldOffset.y + newPos[1] - oldPos[1],\n    bearing: oldOffset.bearing + viewState.bearing - oldViewState.bearing\n  };\n}\n\n// Adjust lng/lat to position the car 1/4 from screen bottom\nfunction offsetViewState(viewState, offset) {\n  const shiftedViewState = {\n    ...viewState,\n    bearing: viewState.bearing + offset.bearing\n  };\n\n  const helperViewport = new WebMercatorViewport(shiftedViewState);\n\n  const pos = [viewState.width / 2 + offset.x, viewState.height / 2 + offset.y];\n  const lngLat = [viewState.longitude, viewState.latitude];\n\n  const [longitude, latitude] = helperViewport.getLocationAtPoint({\n    lngLat,\n    pos\n  });\n\n  return {\n    ...shiftedViewState,\n    longitude,\n    latitude\n  };\n}\n\nexport function getViews(viewMode) {\n  const {name, orthographic, firstPerson, mapInteraction} = viewMode;\n\n  const controllerProps = {...mapInteraction, keyboard: false};\n\n  if (firstPerson) {\n    return new FirstPersonView({\n      id: name,\n      fovy: 75,\n      near: 1,\n      far: 10000,\n      focalDistance: 6,\n      controller: controllerProps\n    });\n  }\n\n  return new MapView({\n    id: name,\n    orthographic,\n    controller: controllerProps\n  });\n}\n\n// Creates viewports that contains information about car position and heading\nexport function getViewStates({viewState, trackedPosition, viewMode, offset}) {\n  const {name, firstPerson, tracked = {}} = viewMode;\n\n  const viewStates = {};\n\n  if (firstPerson) {\n    if (trackedPosition) {\n      const bearing = trackedPosition.bearing;\n      viewState = {\n        ...viewState,\n        ...firstPerson,\n        longitude: trackedPosition.longitude,\n        latitude: trackedPosition.latitude,\n        bearing: bearing + offset.bearing\n      };\n    }\n    viewStates[name] = viewState;\n  } else {\n    viewState = {...viewState};\n    offset = {...offset};\n\n    // Track car position & heading\n    if (tracked.position && trackedPosition) {\n      viewState.longitude = trackedPosition.longitude;\n      viewState.latitude = trackedPosition.latitude;\n    } else {\n      offset.x = 0;\n      offset.y = 0;\n    }\n    if (tracked.heading && trackedPosition) {\n      viewState.bearing = trackedPosition.bearing;\n    } else {\n      offset.bearing = 0;\n    }\n\n    viewStates[name] = offsetViewState(viewState, offset);\n  }\n\n  return viewStates;\n}\n/* eslint-enable max-params */\n"],"file":"viewport.js"}